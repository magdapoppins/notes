(this.webpackJsonpnotes=this.webpackJsonpnotes||[]).push([[0],{33:function(e,n,t){},36:function(e,n,t){var i={"./cv.md":37,"./notes/compsci/BFS_DFS.md":38,"./notes/compsci/compsci-compilers.md":39,"./notes/compsci/compsci-versioncontrol.md":40,"./notes/datastructures/datastructures-in-place-shuffle.md":41,"./notes/datastructures/datastructures-linkedlist.md":42,"./notes/datastructures/datastructures-mergearrays.md":43,"./notes/datastructures/datastructures-overview.md":44,"./notes/ops/ops-docker.md":45,"./notes/ops/ops-kubectl.md":46,"./notes/ops/ops-kubernetes.md":47,"./notes/ops/ops-linuxnotes.md":48,"./notes/web/web-a11y.md":49,"./notes/web/web-eventloop.md":50};function s(e){var n=o(e);return t(n)}function o(e){if(!t.o(i,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return i[e]}s.keys=function(){return Object.keys(i)},s.resolve=o,e.exports=s,s.id=36},37:function(e,n,t){"use strict";t.r(n),n.default="# Hi there \ud83d\udc4b\ud83c\udffc I'm Magda. I work as a software engineer at Valohai.\n\nWork:\n-----\n2019 --\x3e Software Engineer @ Valohai in Turku / remote\n2021 Machine Learning Camp Teacher @ Pink Programming\n2018-2019 Full Stack Consultant @ WunderDog in Helsinki\n2017-2018 Junior C# Consultant @ Academic Work in Malm\xf6\n\nTech Spec 0-5:\n----------\nPython 3   \u2665 \u2665 \u2665 \u2665 \u2665\nAWS        \u2665 \u2665 \u2665 \u2665\nDocker     \u2665 \u2665 \u2665\nGCP        \u2665 \u2665 \nTypeScript \u2665 \u2665 \u2665 \u2665\nReact      \u2665 \u2665 \u2665\nCSS/UI     \u2665\n\nEducation:\n----------\n2017 C# Bootcamp (Acedemy by Academic Work, Stockholm)\n2014-2019 BA, MA Educational Science (University of Turku)\n\nHobbies:\n----------\nDuring my free time I like to be outside and work on my garden. Relaxing\nis super important to me (I feel it really feeds creativity) so I also\npractice yoga and meditation.\n\n"},38:function(e,n,t){"use strict";t.r(n),n.default='# Graph and tree traversal\n\n## BFS\n- Like a ripple in water, walk the closest nodes first, then move to the next "layer"\n- Implementation using a queue\n\n## DFS\n- Like a maze, move though one complete path before backing up and moving to the next\n- Implementation using iteration or recursion\n\n## Comparison\n- BFS always finds the shortest path \n- DFS generally consumes less memory\n\n\n```python\nclass TreeNode(object):\n\tdef __init__(self, value):\n\t\tself.value = value\n\t\tself.left = None\n\t\tself.right = None\n\n\tdef insert_left(self, value):\n\t\tnew_node = TreeNode(value)\n\t\tself.left = new_node\n\n\tdef insert_right(self, value):\n\t\tnew_node = TreeNode(value)\n\t\tself.right = new_node\n\nroot = TreeNode("A")\nroot.insert_left("B")\nroot.left.insert_left("D")\nroot.left.insert_right("E")\nroot.insert_right("C")\nroot.right.insert_left("F")\nroot.right.insert_right("G")\n\ndef BFS(root):\n\tnodes_to_check = [root]\n\n\twhile(nodes_to_check):\n\t\tcurrent = nodes_to_check.pop(0)\n\n\t\t# If this were a real search, do the checking here.\n\t\t# Now we just print things for the sake of demoing.\n\t\tprint(current.value)\n\n\t\tif current.left:\n\t\t\tnodes_to_check.append(current.left)\n\t\tif current.right:\n\t\t\tnodes_to_check.append(current.right)\n\t\t\t\n\ndef DFS(root):\n\tdef walk_down(node):\n\t\t# If this were a real search, do the checking here.\n\t\t# Now we just print things for the sake of demoing.\n\t\tprint(node.value)\n\t\tif node.left:\n\t\t\twalk_down(node.left)\n\t\tif node.right:\n\t\t\twalk_down(node.right)\n\n\twalk_down(root)\n\nprint("Breadth first")\nBFS(root)\n\nprint("Depth first")\nDFS(root)\n```'},39:function(e,n,t){"use strict";t.r(n),n.default="# Compilation and interpretation\nNotes from [Programming language pragmatics](https://www.goodreads.com/book/show/89197.Programming_Language_Pragmatics).\n\n- A compiler is something that reads the entirity of the code, understanding its meaning and outputs the contents in a different format (assembly language or another high-level language).\n- An interpreter, in contrast, analyzes the contents of the code but also takes part in it's execution.\n- In interpretation, the code is run on top of a virtual machine which reads the code as if it where machine code - this offers more flexibility in analyzing and debugging on the run.\n- Compiled code is run as it is (in assembly or machine code) on the machine, leading to faster execution.\n- Preprocessing, in contrast to compilation or interpretation, does not rely on understanding the semantics of the code.\n\n## Common phases\n\n1. Scanner (lexical analysis)\n2. Parser (syntax analysis)\n3. Semantic analysis/intermediate code generation\n\n## Compiler steps\n\n4. Machine-independent code improvement\n5. Target code generation\n6. Machine-specific code improvement => compiled code\n\n\n## Interpreter steps\n\n4. Tree-walk routines => program output\n\n\n\n\n"},40:function(e,n,t){"use strict";t.r(n),n.default="# The reasoning and practices of version control\n"},41:function(e,n,t){"use strict";t.r(n),n.default="import random\n# Factorial of 6 is 270 (this is the count of possible orderings)\nvalues = [1,4,3,2,5,8]\n# Naive approach (choosing random for each i) would be 6^6 = 46656 options\n# Since 46656 is not evenly divisable by the possible outcomes count 270\n# the distribution of the naive shuffle is not uniform, meaning that \n# all outcomes are not equally probable\n\n\ndef get_random(values):\n\treturn random.choice(values)\n\n# Fisher-Yates shuffle (new list in front of old list)\ndef in_place_shuffle(values):\n\tif len(values) <= 1:\n\t\treturn values\n\tfor i in range(len(values)-1):\n\t\trandom_index = get_random(values[i:])\n\t\tvalues[i], values[random_index] = values[random_index], values[i]\n\treturn values\n\nprint(in_place_shuffle(values))"},42:function(e,n,t){"use strict";t.r(n),n.default='# -*- coding: utf-8 -*-\n"""Linked lists.ipynb\n\nAutomatically generated by Colaboratory.\n\nOriginal file is located at\n    https://colab.research.google.com/drive/1Y12P8fCD4zqJo9fafc50VdhhieaaBrb6\n\n# Linked lists \n- Contra to arrays, linked lists don\'t require a continuous chunk of memory, but can be located anywhere in memory\n"""\n\n# Create a class that represents a single node in a linked list\nclass Node:\n  def __init__(self, data=None):\n    self.data = data\n    self.next: Node = None\n\n# Create a class that represents a linked list\n# Add a function to traverse the singly linked list and print its elements\nclass SinglyLinkedList:\n  def __init__(self):\n    self.head: Optional[Node] = None\n\n  def print_list(self):\n    ptr = self.head\n    while ptr is not None:\n      print(ptr.data, end=\' -> \')\n      ptr = ptr.next\n    print("None")\n\n# Create an instance of the linked list\nmy_list = SinglyLinkedList()\n\n# Print the linked list\nmy_list.print_list()\n\n# Create a node to represent the head of the Linked List\nmy_first_node = Node(1)\nmy_list.head = my_first_node\n\n# Print the linked list\nmy_list.print_list()\n\n# Insertion \n# Insert at the start\n# Insert at a specific value\n# Insert at the end\n# Delete at value\n# Delete at position\n\nclass SinglyLinkedList:\n  def __init__(self):\n    self.head: Optional[Node] = None\n    self.length = 0\n\n  def print_list(self):\n    ptr = self.head\n    while ptr is not None:\n      print(ptr.data, end=\' -> \')\n      ptr = ptr.next\n    print("None")\n\n  def insert_beginning(self, data):\n    node = Node(data)\n    node.next = self.head\n    self.head = node\n    self.length += 1\n\n  def insert_end(self, data):\n    node = Node(data)\n    ptr = self.head\n    while ptr.next is not None:\n      ptr = ptr.next\n    ptr.next = node\n    self.length += 1\n\n  def insert_position(self, data, position: int):\n    node = Node(data)\n    ptr = self.head\n    count = 0\n    while count < position-1:\n      if ptr.next is None:\n        raise IndexError("Tried to insert at nonexistant position")\n      ptr = ptr.next\n      count += 1 \n    node.next = ptr.next\n    ptr.next = node\n    self.length += 1\n\n  def delete_position(self, position: int):\n    if position == 0:\n      self.head = self.head.next\n    else:\n      ptr = self.head\n      counter = 0\n      while counter > position - 1:\n        counter += 1\n        ptr = ptr.next\n      rest_of_the_list = ptr.next.next\n      ptr.next = rest_of_the_list\n    self.length -= 1\n\n  def delete_value(self, data):\n      # if self.head == data:\n      #   self.head = self.head.next\n      # else:\n      ptr = self.head\n      while (ptr.next is not None) and (ptr.next.data != data):\n        ptr = ptr.next\n      if ptr.next.data == data:\n        rest_of_the_list = ptr.next.next\n        ptr.next = rest_of_the_list\n        self.length -= 1\n\nnew_list = SinglyLinkedList()\nnew_list.insert_beginning(7)\nnew_list.print_list()\n\nnew_list.insert_end(5)\nnew_list.print_list()\n\nnew_list.insert_position(4, 1)\nnew_list.print_list()\nnew_list.insert_position(8, 2)\nnew_list.print_list()\n\nnew_list.delete_value(5)\nnew_list.print_list()\n\nnew_list.delete_position(0)\nnew_list.print_list()\n\n# Reversing a linked list \n\nreversable_list = SinglyLinkedList()\nreversable_list.insert_beginning(5)\nreversable_list.insert_beginning(4)\nreversable_list.insert_beginning(3)\nreversable_list.insert_beginning(2)\nreversable_list.insert_beginning(1)\nreversable_list.print_list()\n\ndef reverse(linked_list: SinglyLinkedList) -> SinglyLinkedList:\n  previous = None\n  next = None\n  current = linked_list.head\n  while current.next is not None:\n    # Store the remaining list in next\n    next = current.next\n    # Turn the arrow to point backwards from current\n    current.next = previous\n    # Move previous and current forwards\n    previous = current\n    current = next\n  # Connect the last node to the rest and point the head at it\n  current.next = previous\n  linked_list.head = current\n  return linked_list\n\n\nreversed = reverse(reversable_list)\nreversed.print_list()'},43:function(e,n,t){"use strict";t.r(n),n.default='"""Merge sorted arrays.ipynb\n\nAutomatically generated by Colaboratory.\n\nOriginal file is located at\n    https://colab.research.google.com/drive/1-YWEveq-PwYumC0ib7z3GQ4b_CQQia-M\n"""\n\nmy_list     = [3, 4, 6, 10, 11, 15]\nalices_list = [1, 5, 8, 12, 14, 19]\n\nnew_list_len = len(my_list) + len(alices_list)\n\nnew_list = []\npos_mine = 0\npos_alices = 0\n\nfor i in range(new_list_len):\n  choose_mine = pos_mine < len(my_list) and my_list[pos_mine]<alices_list[pos_alices]\n  if choose_mine:\n    new_list.append(my_list[pos_mine])\n    pos_mine += 1\n  else:\n    new_list.append(alices_list[pos_alices])\n    pos_alices += 1\n\n\nprint(new_list)'},44:function(e,n,t){"use strict";t.r(n),n.default="\n\n| data structure | access | memory locations\n|----------------|------|---- |\n| linked list | sequential access (starting at head) | non-contiguous (connected by pointers) |\n| regular list | random access (by index) | contigous memory allocation |\n\n\n"},45:function(e,n,t){"use strict";t.r(n),n.default='# Docker\nNotes from the [DevOps with Docker](https://devopswithdocker.com/) course by the University of Helsinki.\n\n## Part 0\n- Why docker => docker combines the application and its dependencies in a imaga that can then be run on any machine that can run docker\n- Docker images are files that are built from instructions in "dockerfiles"\n- Docker images cannot be changed, but they can be layered\n- Docker containers contain what is needed to run an application - they can be started, stopped and interacted with\n- The host machine or other docker containers can interact with a container via TCP\n- Containers are instances of images\n\n```\n# Command cheat sheet\n\n# Run container in detached mode\ndocker container run -d nginx\n\n# See all containers or images\ndocker container/image ls \n\n# Stop running container and remove it\ndocker container stop my-container\ndocker container rm <id>\n\n# Prune stopped containers or images (dangling or all using a)\ndocker container/image prune (-a)\n\n# Prune all stopped/unused things, incl. images and build cache objects\ndocker system prune\n\n# Execute commands inside container\ndocker container exec <id>\n```\n- You can use `docker search <name>` to search for images from dockerhub\n- You can see for example whether the images are official (reviewed by dockerhub) and if they are automatically built from a repository\n- DockerHub isn\'t the only docker registry - for example Quay can also be used \n- Only images from DockerHub are displayed using `docker search` and using images from e.g. Quay requires specifying their host name when pulling\n\n```\ndocker image pull quay.io/nordstrom/hello-world\n```\n- Docker images may be tagged using `:<tag>` after their name\n- We can tag images locally for our own convenience - this is also a way of renaming images\n\n- If running with the `-i` (interactive, connect STDIN) and `-t` (allocate a pseudo-TTY) flags, you can interact with the container, as seen in this example \n\n```sh\n# Start a container in detached mode \ndocker container run -d -it --name karviainen ubuntu:16.04 sh -c \'echo "Input website:"; read website; echo "Searching.."; sleep 1; curl http://$website;\'\n# Add curl so we can run the command\ndocker exec karviainen apt-get update\ndocker exec karviainen apt-get install -y curl wget\n# Attach to that container, it will now receive STDIN\ndocker container attach karviainen\nhelsinki.fi\nSearching..\n<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">\n...\n```\n\n'},46:function(e,n,t){"use strict";t.r(n),n.default="# Helpful `kubectl` commands\n\n- You can create new kubernetes objects using `kubectl apply -f myfile.yml` \n- If you want the yaml to live directly inside the (bash) script file, you can use heredoc:\n```sh\ncat << EOF |\xa0kubectl apply -f -\napi: v0\n...\nEOF\n```\n- Add a shebang in the beginning of a sh file to signify which shell it should be run with (e.g. `#!/bin/bash/`)\n\n\n```sh\n# See all pods and their states\nkubectl get pods --all-namespaces\n# See details of a pod in a specified namespace (defaults to only default)\nkubectl describe -n mynamespace pod/mypod\nkubectl describe -n mynamespace configmap/myconfigmap\n# For each project you create locally with e.g. kind or k3s, you can store\n# it's kubeconfig in a specific place \n```"},47:function(e,n,t){"use strict";t.r(n),n.default="# Kubernetes\nNotes from the [DevOps with Kubernetes](https://devopswithkubernetes.com/) course by the University of Helsinki."},48:function(e,n,t){"use strict";t.r(n),n.default="## Command memos\n`journalctl` logs (uses less as a pager, space = next page, G = go to end, / = search)\n`ps aux |\xa0grep <myservice>` look for process\n`docker pull >stdout.txt 2>stderr.txt` output the stderr and stdout in txt files\n\n## Systemd and systemctl\n- systemd unit files are used to configure commands that are automatically started when the machine is (re)started\n- unit files live under /etc/systemd/system/ and are named *.service\nHere is an example:\n```\n[Unit]\nDescription=asdjasdlashd\nAfter=services-that-need-to-start-before\nRequires=services-that-need-to-be-active-before\n\n[Service]\nRestart=always\nWorkingDirectory=/your-dir\nExecStart=the command you want to run\n\n[Install]\nWantedBy=multi-user.target\n```\n"},49:function(e,n,t){"use strict";t.r(n),n.default='# On web accessibility\n\nWeb accessibility (a11y for short) is one of the increasingly important topics of web development. You can easily get started with inspecting and amending your page using tools like [Wave](https://wave.webaim.org/).\n\n## Motivation\n- Providing equal access\n- Best practices in a11y overlap with search engine optimization and usability\n\n## How does your page look without it\'s looks?\nThe page DOM is an "accessibility tree", where elements have different attributes based on what they are. This tree structure is the basis of assistive technologies such as screen readers. These technologies, having read though this tree, provide an alternative way to interact with it that meets the users needs. Each object in the accessibility tree contains the following attributes.\n\n**name** - how we refer to a thing, for example a text inside a link  \n**description** - any description beyond the name, perhaps further description of the contents  \n**role** - what element it is, for example a button or a list  \n**state** - for example if a checkbox is checked or not  \n\nIn addition to these, the element also contains information of possible actions that can be performed with it.\n\n## Semantic HTML\n- Understanding HTML and using the elements it provides purposefully sets an excellent starting point to an accessible project\n- Semantic HTML elements are those elements with attached meaning (in contrast to for example `<div>` or `<span>`)\n- Correct semantics allows technologies such as screen readers to better notice and utilise the elements in their intended way\n\n### Some examples\n- header - container of headings, icons...\n- footer - things like copyright, authorship...\n- nav - a set of navigation links\n- button - something happens when you press it\n- a - a link leading somewhere\n- labels with inputs inside - to indicate what this input is\n- section - a section\n- article - self-contained content\n- figure and nested figcaption - a figure along with a text description\n- h1-h6 - headings in importance order from 1 through 6\n\n## ARIA (Accessible Rich Internet Applications)\n- ARIA is a set of attributes aiming to provide more possiblilites for defining the role and usage of elements\n- Roles, properties and states describing the UI\n\n### Some examples\n- aria-hidden - indicates that the element is hidden from the visual UI\n- role - the semantic role of the element which otherwise offers no semantics. Danger of using this for wrongly changing a role of an element!'},50:function(e,n,t){"use strict";t.r(n),n.default="# How JS is executed in the browser\nTLDR; go play with the [loupe visualization](http://latentflip.com/loupe/) by Philip Roberts.\n\n## Some key points you might have heard\n- JS is executed in the browser by the V8 chrome runtime\n- It is a single treaded language - only one thing can happen in one call stack at a time\n- It is non-blocking - implemented by callbacks\n- It is concurrent - enabled by WebAPIs\n- It is asynchronous\n\n## What happens in the browser\n\n### The V8 runtime\n#### The call stack\n- Defined what to do one step at a time \n- Things are pushed unto the call stack in the order they are read in the code and popped off as they are executed\n- Last thing to be added is the first thing to be executed, so if a function calls another function, it is popped before it's calling function is popped\n- When an error is thrown in the browser, you can view it's stack trace (the state of the stack as it was when the error was thrown) in the console\n- If there are things on the call stack, the browser is stuck (e.g. slow synchronous requests) - this is solved by asynchronous callbacks\n\n#### A memory heap\n- A heap for memory allocation in V8\n\n### WebAPIs\n- DOM and it's methods like setTimeout, setInterval...\n- The browsers built-in XMLHttpRequest object (allowing AJAX)\n- For example async things happen here\n\n### The task queue\n- Things returned from the above mentioned web APIs are pushed here to wait until the call stack is empty\n\n### The event loop\n- When the call stack is empty the event loop runs and pushes things from the callback queue and pushes them unto the stack in the order they were added to the task queue\n\n\nBased on this, we now understand for example why someone would use this kind of code\n```js\nsetTimeout(() => console.log('hello'), 0)\nconsole.log('I go first!')\n```\nin order to do something only after the call stack has cleared."},55:function(e,n,t){"use strict";t.r(n);var i=t(1),s=t(0),o=t.n(s),a=t(23),r=t.n(a),c=(t(33),t(9)),l=t(11),d=t(7),u=t(57),h=t(8);function _(){var e=Object(d.a)(["\n    animation: "," 1s ease infinite;\n"]);return _=function(){return e},e}function p(){var e=Object(d.a)(["\n        50% {\n            opacity: 0;\n        }\n    "]);return p=function(){return e},e}var f=h.b.span(_(),(function(){return Object(h.c)(p())})),m=function(e){var n=e.getResponse,t=e.location,s=o.a.useState(""),a=Object(l.a)(s,2),r=a[0],c=a[1],d=o.a.useRef(),h=o.a.useCallback((function(){d.current&&d.current.focus()}),[]);o.a.useLayoutEffect(h),Object(u.a)("click",h);var _=o.a.useCallback((function(e){!1!==n(e)&&(c(""),h())}),[h,n]);return Object(i.jsxs)(i.Fragment,{children:[Object(i.jsxs)("pre",{style:{display:"inline-block",margin:0,lineHeight:"1.2em"},children:["/home/guest/",t," \ud83d\udefc "]}),Object(i.jsx)("input",{ref:d,type:"text",value:r,onChange:function(e){return c(e.target.value)},onKeyDown:_,style:{position:"fixed",left:"-999px",top:"-999px"}}),r,Object(i.jsx)(f,{children:"\u2588"})]})},g="#ba0072",b="#db2950",y="#e55d2c",w="#db8d00";function k(){var e=Object(d.a)(["\ncolor: ",";\ntext-shadow: 1px 1px 2px ",", 0 0 25px ",", 0 0 5px ",";\n"]);return k=function(){return e},e}var v=h.b.pre(k(),b,y,b,w),x=function(){return Object(i.jsx)(v,{children:"\n                                  _______\n__  __   ___                      \\  ___ `'.\n|  |/  `.'   `.            .--./)   ' |--.\\  \\\n|   .-.  .-.   '          /.''\\    | |    \\  '\n|  |  |  |  |  |    __   | |  | |   | |     |  '    __\n|  |  |  |  |  | .:--.'.  `-' /    | |     |  | .:--.'.\n|  |  |  |  |  |/ |   \\ | /(\"'`     | |     ' .'/ |   \\ |\n|  |  |  |  |  |`\" __ | | \\ '---.   | |___.' /' `\" __ | |\n|__|  |__|  |__| .'.''| |  /'\"\"'.\\ /_______.'/   .'.''| |\n              / /   | |_||     ||\\_______|/   / /   | |_\n              \\ \\._,\\ '/\\'. __//              \\ \\._,\\ '/\n                `--'  `\"  `'---'                `--'  `\"\n  "})};function j(){var e=Object(d.a)(["\n        color: ",";\n    "]);return j=function(){return e},e}function O(){var e=Object(d.a)(["\n        color: ",";\n    "]);return O=function(){return e},e}function S(){var e=Object(d.a)(["\n        color: ",";\n    "]);return S=function(){return e},e}function T(){var e=Object(d.a)(["\n    margin: 0;\n    line-height: 1.2em;\n    overflow-wrap: break-word;\n    white-space: pre-wrap;\n    ","\n    ","\n    ","\n"]);return T=function(){return e},e}var I=h.b.pre(T(),(function(e){return e.info&&Object(h.a)(S(),g)}),(function(e){return e.warning&&Object(h.a)(O(),b)}),(function(e){return e.surprise&&Object(h.a)(j(),w)})),C=function(e){var n=e.items;return Object(i.jsx)(i.Fragment,{children:n.map((function(e,n){return"info"===e.role?Object(i.jsx)(I,{info:!0,children:e.content},n):"warning"===e.role?Object(i.jsx)(I,{warning:!0,children:e.content},n):Object(i.jsx)(I,{children:e.content},n)}))})},D=t(36),N={directories:{},files:{}};function A(e){var n=N;return e.split("/").forEach((function(e){if(e.length){if(!n.directories[e])throw new Error("no such directory");n=n.directories[e]}})),n}D.keys().forEach((function(e){var n=D(e),t=e.substr(2).split("/"),i=t.pop(),s=N;t.forEach((function(e){s.directories[e]||(s.directories[e]={directories:{},files:{}}),s=s.directories[e]})),s.files[i]=n.default}));var L=function(e,n){return{content:e,role:n}},E=function(){var e=o.a.useState("notes"),n=Object(l.a)(e,2),t=n[0],s=n[1],a=o.a.useState([L("Type 'help' to get started.","info")]),r=Object(l.a)(a,2),d=r[0],u=r[1],h=o.a.useRef();o.a.useEffect((function(){h.current.scrollIntoView({behavior:"smooth",block:"start"})}),[d]);return Object(i.jsxs)(i.Fragment,{children:[Object(i.jsx)(x,{}),Object(i.jsx)(C,{items:d}),Object(i.jsx)(m,{getResponse:function(e){if("Enter"!==e.key&&"Tab"!==e.key)return!1;"Tab"===e.key&&e.preventDefault();var n=e.target.value;if("help"===n){var i=[].concat(Object(c.a)(d),[L("/home/guest/".concat(t," \ud83d\udefc help"))]);i.push(L("Try listing contents (ls), moving into folders (cd directoryname) and copying texts (cat filename).","info")),u(i)}if("clear()"===n&&u([L("Type 'help' to get started.","info")]),"ls"===n){var o=A(t),a=Object.keys(o.directories).map((function(e){return e+"/"})),r=Object.keys(o.files),h=[].concat(Object(c.a)(d),[L("/home/guest/".concat(t," \ud83d\udefc ls")),L([].concat(Object(c.a)(r),Object(c.a)(a)).join(" "))]);u(h)}if(n.startsWith("cd")){var _=n.split(" "),p=Object(l.a)(_,2)[1],f=A(t);if(".."===p){var m=t.split("/");m.pop(),s(m.join("/")),u([].concat(Object(c.a)(d),[L("/home/guest/".concat(t," \ud83d\udefc ").concat(n))]))}else f.directories[p]&&s(t+"/"+p)}if("pwd"===n&&u([].concat(Object(c.a)(d),[L("Users/magda/home/guest/".concat(t," \ud83d\udefc"))])),n.startsWith("cat ")){var g=n.split(" ")[1],b=A(t);console.log("dir",b),console.log("filename",g),b.files[g]&&u([].concat(Object(c.a)(d),[L("Users/magda/home/guest/".concat(t," \ud83d\udefc cat ").concat(g)),L(b.files[g])]))}},location:t}),Object(i.jsx)("div",{ref:h})]})},F=function(){return Object(i.jsxs)(i.Fragment,{children:[Object(i.jsx)(v,{children:"\nTHIS IS\n            THE BORING\n                            SIDE...\n__________________________________________________\n|          _____________________________           |\n| [1] [2]  _____________________________ [_][_][_] |\n| [3] [4]  [_][_][_] [_][_][_][_] [_][_] [_][_][_] |\n| [5] [6]  [][][][][][][][][][][][][][_] [1][2][3] |\n| [7] [8]  [_][][][][][][][][][][][][][] [4][5][6] |\n| [9][10]  [__][][][][][][][][][][][][_] [7][8][9] |\n| [11][12] [___][][][][][][][][][][][__] [__][0][] |\n|          [_][______________][_]                  |\n|__________________________________________________|\n\n"}),Object(i.jsx)(I,{warning:!0,children:"Hi there \ud83d\udc4b\ud83c\udffc I'm Magda. I work as a software engineer at Valohai."}),Object(i.jsx)(I,{info:!0,children:"\nWork:\n-----\n2017-2018 Junior C# Consultant @ Academic Work in Malm\xf6\n2018-2019 Full Stack Consultant @ WunderDog in Helsinki\n2019 --\x3e Software Engineer @ Valohai in Turku / remote\n\nEducation:\n----------\n2012-2014 Artisan of Textile (Omnia)\n2014-2019 BA, MA Educational Science (University of Turku)\n2017 C# Bootcamp (Acedemy by Academic Work)\n"}),Object(i.jsx)(I,{surprise:!0,children:"\nDuring my free time I like to be outside and work on my garden. Relaxing\nis super important to me (I feel it really feeds creativity) so I also\npractice yoga and meditation.\n"}),Object(i.jsx)(I,{children:"\nTech Spec 0-5:\n----------\nPython 3   \u2665 \u2665 \u2665 \u2665 \u2665\nTypeScript \u2665 \u2665 \u2665 \u2665\nReact      \u2665 \u2665 \u2665\nAWS        \u2665 \u2665 \u2665 \u2665\nDocker     \u2665 \u2665 \u2665\nK8s        \u2665 \u2665\nPostgres   \u2665 \u2665 \u2665\n\n"})]})},P=t(16),W=t(2),H=function(){return Object(i.jsx)(P.a,{children:Object(i.jsxs)("div",{style:{margin:".2em 25em 5em 25em"},children:[Object(i.jsxs)("nav",{style:{display:"flex",justifyContent:"space-between",visibility:"hidden"},children:[Object(i.jsx)(P.b,{to:"/",children:"Home"}),Object(i.jsx)(P.b,{to:"/notes",children:"Notes"}),Object(i.jsx)(P.b,{to:"/safety",children:"Just the CV"})]}),Object(i.jsxs)(W.c,{children:[Object(i.jsx)(W.a,{path:"/safety",children:Object(i.jsx)(F,{})}),Object(i.jsx)(W.a,{path:"/",children:Object(i.jsx)(E,{})})]})]})})},M=function(e){e&&e instanceof Function&&t.e(3).then(t.bind(null,58)).then((function(n){var t=n.getCLS,i=n.getFID,s=n.getFCP,o=n.getLCP,a=n.getTTFB;t(e),i(e),s(e),o(e),a(e)}))};r.a.render(Object(i.jsx)(o.a.StrictMode,{children:Object(i.jsx)(H,{})}),document.getElementById("root")),M()}},[[55,1,2]]]);
//# sourceMappingURL=main.bb9c1f76.chunk.js.map